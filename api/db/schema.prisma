generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native"]
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model OptionSet {
  id     Int              @id @default(autoincrement())
  name   String           @unique
  values OptionSetValue[]
}

model OptionSetValue {
  id                 Int       @id @default(autoincrement())
  option_set_id      Int
  label              String
  value              String
  option_set_details OptionSet @relation(fields: [option_set_id], references: [id])

  @@unique([option_set_id, value])
  @@index([option_set_id, label])
}

model Arrestee {
  id             Int       @id @default(autoincrement())
  display_field  String?
  search_field   String?
  first_name     String?
  last_name      String?
  preferred_name String?
  pronoun        String?
  dob            DateTime?
  email          String?
  phone_1        String?
  phone_2        String?
  address        String?
  city           String?
  state          String?
  zip            String?
  notes          String?
  custom_fields  Json?
  created_at     DateTime? @default(now())
  created_by_id  Int?
  updated_at     DateTime? @updatedAt
  updated_by_id  Int?
  arrests        Arrest[]
  created_by     User?     @relation("CreatedArrestee", fields: [created_by_id], references: [id])
  updated_by     User?     @relation("ModifiedArrestee", fields: [updated_by_id], references: [id])

  @@index([search_field])
}

model CustomSchema {
  id            Int       @id @default(autoincrement())
  table         String
  section       String
  schema        Json
  updated_at    DateTime? @updatedAt
  updated_by_id Int?
  updated_by    User?     @relation(fields: [updated_by_id], references: [id])
}

model Log {
  id             Int       @id @default(autoincrement())
  time           DateTime  @default(now())
  type           String?
  notes          String?
  needs_followup Boolean   @default(false)
  custom_fields  Json?
  created_at     DateTime? @default(now())
  created_by_id  Int?
  updated_at     DateTime? @updatedAt
  updated_by_id  Int?
  created_by     User?     @relation("CreatedLog", fields: [created_by_id], references: [id])
  updated_by     User?     @relation("ModifiedLog", fields: [updated_by_id], references: [id])
  arrests        Arrest[]
  action         Action?   @relation(fields: [action_id], references: [id])
  action_id      Int?
}

model HotlineLog {
  id            Int       @id @default(autoincrement())
  start_time    DateTime
  end_time      DateTime
  type          String?
  notes         String?
  notes_raw     String?
  custom_fields Json?
  created_at    DateTime? @default(now())
  created_by_id Int?
  updated_at    DateTime? @updatedAt
  updated_by_id Int?
  created_by    User?     @relation("CreatedHotlineLog", fields: [created_by_id], references: [id])
  updated_by    User?     @relation("ModifiedHotlineLog", fields: [updated_by_id], references: [id])
}

model Arrest {
  id              Int       @id @default(autoincrement())
  display_field   String?
  search_field    String?
  date            DateTime?
  location        String?
  charges         String?
  arrest_city     String?
  jurisdiction    String?
  citation_number String?
  arrestee_id     Int?
  custom_fields   Json?
  created_at      DateTime? @default(now())
  created_by_id   Int?
  updated_at      DateTime? @updatedAt
  updated_by_id   Int?
  arrestee        Arrestee? @relation(fields: [arrestee_id], references: [id], onDelete: Cascade)
  created_by      User?     @relation("CreatedArrest", fields: [created_by_id], references: [id])
  updated_by      User?     @relation("ModifiedArrest", fields: [updated_by_id], references: [id])
  action_id       Int?
  action          Action?   @relation(fields: [action_id], references: [id])
  logs            Log[]

  @@index([search_field])
}

model User {
  id                     Int            @id @default(autoincrement())
  email                  String         @unique
  name                   String
  custom_fields          Json?
  role                   String         @default("User")
  hashedPassword         String?
  salt                   String?
  expiresAt              DateTime?
  resetToken             String?
  resetTokenExpiresAt    DateTime?
  action_ids             Int[] // Array of action IDs
  arrest_date_min        DateTime?
  arrest_date_max        DateTime?
  arrest_date_threshold  Int?
  created_arrests        Arrest[]       @relation("CreatedArrest")
  updated_arrests        Arrest[]       @relation("ModifiedArrest")
  created_arrestees      Arrestee[]     @relation("CreatedArrestee")
  updated_arrestees      Arrestee[]     @relation("ModifiedArrestee")
  updated_custom_schemas CustomSchema[]
  created_hotline_logs   HotlineLog[]   @relation("CreatedHotlineLog")
  updated_hotline_logs   HotlineLog[]   @relation("ModifiedHotlineLog")
  created_logs           Log[]          @relation("CreatedLog")
  updated_logs           Log[]          @relation("ModifiedLog")
  created_table_views    TableView[]    @relation("CreatedTableView")
  updated_table_views    TableView[]    @relation("ModifiedTableView")
  updated_site_settings  SiteSetting[]  @relation("ModifiedSiteSetting")
}

model TableView {
  id            Int       @id @default(autoincrement())
  name          String
  state         String
  type          String
  created_at    DateTime? @default(now())
  created_by_id Int?
  updated_at    DateTime? @updatedAt
  updated_by_id Int?
  created_by    User?     @relation("CreatedTableView", fields: [created_by_id], references: [id])
  updated_by    User?     @relation("ModifiedTableView", fields: [updated_by_id], references: [id])
}

model Action {
  id            Int       @id @default(autoincrement())
  name          String
  description   String?
  start_date    DateTime
  end_date      DateTime?
  jurisdiction  String?
  city          String?
  custom_fields Json?
  Arrest        Arrest[]
  Log           Log[]
}

model SiteSetting {
  id            String   @id
  description   String?
  value         Json
  updated_at    DateTime @updatedAt
  updated_by    User?    @relation("ModifiedSiteSetting", fields: [updated_by_id], references: [id])
  updated_by_id Int?
}
